<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://dinger0.github.io/</id><title>dinger0</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-04-23T00:43:28+08:00</updated> <author> <name>dinger0</name> <uri>https://dinger0.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://dinger0.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://dinger0.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 dinger0 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>C语言的注意事项</title><link href="https://dinger0.github.io/posts/C-Language/" rel="alternate" type="text/html" title="C语言的注意事项" /><published>2021-10-23T15:10:00+08:00</published> <updated>2022-04-23T00:39:16+08:00</updated> <id>https://dinger0.github.io/posts/C-Language/</id> <content src="https://dinger0.github.io/posts/C-Language/" /> <author> <name>dinger0</name> </author> <category term="技术" /> <category term="总结" /> <summary> 记录一些自己写代码遇到的小问题，不定期更新。 1. C/C++语言区别 1.1 malloc()函数 在C++语言中，malloc() 返回的类型是 void* 指针，需要做类型转换，但是C语言不需要。 1.2 const 在C语言中，const修饰的变量不能用作申请数组的长度，编译器认为其只读，而不是常量，但是在C++中可以。 const修饰的全局变量不能通过指针进行修改，但是局部变量可以。 const右侧修饰的是什么，就是什么不能被直接修改。 2. C语言 2.1 结构体和结构体指针的访问 在C语言中，访问结构体的成员，使用 struct_name.member ，结构体指针的话，使用 struct_name-&amp;gt;member。 2.2 typedef与#define的区别 #include ... </summary> </entry> <entry><title>写作教程2</title><link href="https://dinger0.github.io/posts/how-to-writing2/" rel="alternate" type="text/html" title="写作教程2" /><published>2021-10-16T20:10:00+08:00</published> <updated>2022-04-23T00:39:16+08:00</updated> <id>https://dinger0.github.io/posts/how-to-writing2/</id> <content src="https://dinger0.github.io/posts/how-to-writing2/" /> <author> <name>dinger0</name> </author> <category term="技术" /> <category term="教程" /> <summary> 主要介绍markdown语法，很简单的 1.标题 一级标题一个 #，二级标题两个 #，以此类推，下面是代码展示及效果展示（会导致目录出问题）： # NO1 ## NO2 ### NO3 #### NO4 NO1 NO2 NO3 NO4 2.段落 一句话：通过空一行区分段落。 3.列表 3.1 有序列表 1. first 2. second 3. third first second third 3.2 无序列表 - 章 - 节 - 段落 章 节 段落 3.3 任务列表 - [ ] 睡觉 -[ ] 吃饭 - [x]米饭 - [ ]面条 睡觉 吃饭 米饭 面条... </summary> </entry> <entry><title>写作教程1</title><link href="https://dinger0.github.io/posts/how-to-writing1/" rel="alternate" type="text/html" title="写作教程1" /><published>2021-10-16T16:10:00+08:00</published> <updated>2022-04-23T00:39:16+08:00</updated> <id>https://dinger0.github.io/posts/how-to-writing1/</id> <content src="https://dinger0.github.io/posts/how-to-writing1/" /> <author> <name>dinger0</name> </author> <category term="技术" /> <category term="教程" /> <summary> 写作文件命名与存放路径 在 _post/ 目录下，创建一个文件，按照如下格式命名： YYYY(年)-MM(月)-DD(日)-TITLE(标题).EXTENSION(扩展名)。注意：文件扩展名 .md 和 .markdown 二选一即可。 Front Matter配置 你可以根据Jekyllrb网站的 Front Matter定义进行配置。 一个标准的配置文件格式如下： --- title: TITLE date: YYYY-MM-DD HH:MM:SS +/-TTTT categories: [TOP_CATEGORIE, SUB_CATEGORIE] tags: [TAG] # TAG names should always be lowercase --- 注意：文章的 layout 字段默认设置为 post，不需要在Front Matter中重复添加... </summary> </entry> </feed>
