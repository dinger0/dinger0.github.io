[ { "title": "C语言的注意事项", "url": "/posts/C-Language/", "categories": "技术, 总结", "tags": "C语言, C++", "date": "2021-10-23 15:10:00 +0800", "snippet": "记录一些自己写代码遇到的小问题，不定期更新。1. C/C++语言区别1.1 malloc()函数在C++语言中，malloc() 返回的类型是 void* 指针，需要做类型转换，但是C语言不需要。1.2 const 在C语言中，const修饰的变量不能用作申请数组的长度，编译器认为其只读，而不是常量，但是在C++中可以。 const修饰的全局变量不能通过指针进行修改，但是局部变量可以。 const右侧修饰的是什么，就是什么不能被直接修改。 2. C语言2.1 结构体和结构体指针的访问在C语言中，访问结构体的成员，使用 struct_name.member ，结构体指针的话，使用 struct_name-&amp;gt;member。2.2 typedef与#define的区别#include &amp;lt;stdio.h&amp;gt;typedef int * PTRINT;#define pint int *int main(){ int a = 10; int b = 11; const int * p1 = &amp;amp;a; //指针常量，即p1指向的地址的内容不能通过指针的形式进行修改，但p1指向的地址可变。 //*p1 = 11; //error:ssignment of read-only location ‘*p1’ //p1 = &amp;amp;b; //无问题 int * const p2 =&amp;amp;b; //常量指针，即p2指向地址不可变，但p2指向的地址的内容可变。 //*p2 = 11; //无问题 //p2 = &amp;amp;a; //error: assignment of read-only variable ‘p2’ pint c, d; //等价于 int *a, b; //c = &amp;amp;a; //无问题 //d = &amp;amp;a; //warning: assignment to ‘int’ from ‘int *’ makes integer from pointer without a cast PTRINT e, f; //PTRINT是一种类型，类似于 int a, b; //e = &amp;amp;a; //无问题 //f = &amp;amp;a; //无问题 const pint g; //声明了一个指针常量 const PTRINT h; //声明了一个常量指针 //*g = 11; //error: assignment of read-only location ‘*g’ //g = &amp;amp;b; //无问题 //*h = 11; //无问题 h = &amp;amp;a; //error: assignment of read-only variable ‘h’ printf(&quot;1\\n&quot;);}define只是字符的替换，typedef作为一个新的类型。2.3 数组、形参和sizeof()函数#include &amp;lt;stdio.h&amp;gt;void fun(int *arr){ printf(&quot;fun:%d\\n&quot;, (int)(sizeof(arr) / sizeof(arr[0])));}int main(){ int arr[4] = {0}; printf(&quot;main():%d\\n&quot;, (int)(sizeof(arr) / sizeof(arr[0]))); //main():4 fun(arr); //fun:2}数组名做形参，传入的是数组首元素指针，另外，C语言不能实现函数默认参数。2.4 main()函数参数#include &amp;lt;stdio.h&amp;gt;int main(int argc, char** argv) //等价 int main(int argc, char* argv[]){ // argc表示参数个数，argv表示指向参数的指针数组。 // argv[0]:程序运行路径，argv[1]:运行路径后第1个字符串 // 运行命令：./a.out 0000 输出：2 0000 printf(&quot;%d\\n&quot;, argc); printf(&quot;%s\\n&quot;, argv[1]);}2.5 可变数组C99及以后版本支持不定长数组的声明,再也不要用malloc和free了。" }, { "title": "写作教程2", "url": "/posts/how-to-writing2/", "categories": "技术, 教程", "tags": "MarkDown", "date": "2021-10-16 20:10:00 +0800", "snippet": "主要介绍markdown语法，很简单的1.标题一级标题一个 #，二级标题两个 #，以此类推，下面是代码展示及效果展示（会导致目录出问题）：# NO1## NO2### NO3#### NO4NO1NO2NO3NO42.段落一句话：通过空一行区分段落。3.列表3.1 有序列表1. first2. second3. third first second third3.2 无序列表- 章 - 节 - 段落 章 节 段落 3.3 任务列表- [ ] 睡觉-[ ] 吃饭 - [x]米饭 - [ ]面条 睡觉 吃饭 米饭 面条 3.4 描述列表太阳: 太阳系的王者。 太阳 太阳系的王者。4.块引用&amp;gt; 好好学习，天天向上！ 好好学习，天天向上！5.表格|公司|国家|CEO||:---|:---|--:||百度|中国|李彦宏||苹果|美国|库克| 公司 国家 CEO 百度 中国 李彦宏 苹果 美国 库克 6.链接百度的官网是：&amp;lt;https://www.baidu.com&amp;gt;百度的官网是：https://www.baidu.com7.脚注研究发现：每过60秒时间，这个时间就少了1分钟[^footnote]。研究发现：每过60秒时间，这个世界就少了1分钟1。8.图片见教程1的图片部分。9.框图(Mermaid)暂时用不到。 gantt title Adding GANTT diagram functionality to mermaid apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1d10.数学使用的话需要在Front Matter 开启 math 功能，见教程1数学部分。公式显示由MathJax驱动。\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]11.内联代码字段 `date` 代表日期。字段 date 代表日期。12.代码块见教程1代码块部分。13.逆序脚注[^footnote]: 脚注1 脚注1 &amp;#8617; " }, { "title": "写作教程1", "url": "/posts/how-to-writing1/", "categories": "技术, 教程", "tags": "MarkDown", "date": "2021-10-16 16:10:00 +0800", "snippet": "写作文件命名与存放路径在 _post/ 目录下，创建一个文件，按照如下格式命名： YYYY(年)-MM(月)-DD(日)-TITLE(标题).EXTENSION(扩展名)。注意：文件扩展名 .md 和 .markdown 二选一即可。Front Matter配置你可以根据Jekyllrb网站的 Front Matter定义进行配置。一个标准的配置文件格式如下：---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- 注意：文章的 layout 字段默认设置为 post，不需要在Front Matter中重复添加layout字段。时区设置为了准确记录文章发布时间，你不仅需要设置 _config.yml 文件中的 timezone 字段，还要配置 Front Matter 的 date 字段，另外，时区的配置需要遵循以下格式：+0800，代表东8区。分类与标签每篇文章的 categories 包含两个元素，分别对应大分类与小分类， tags 可以任意多个，逗号隔开。举个例子：categories: [动物, 昆虫]tags: [蜜蜂]文章目录(Table of Contents)默认情况下，目录(TOC)显示在博文的右侧。如果你想关闭该功能，请把 _config.yml 文件中的 toc 字段设置为 false，注意，这会关闭所有博文的目录显示功能，如果你只想关闭某篇博文的目录显示功能，可以在 Front Matter中添加以下配置：---toc: false---评论与TOC功能类似,你可以在 _config.yml 文件中修改 comments 字段达到全局关闭评论的目的。若是单独关闭某一篇文章的评论，只需在Front Matter配置中添加以下信息：---comments: false---数学为了加快访问，该功能默认关闭，需要打开的话，请在Front Matter配置文件中添加：---math: true---框图工具(Mermaid)Mermaid 是一个很好的框图生成工具，如果需要，可以添加该功能字段：---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.图片图片预览需要在文章的顶部添加图片的话，请在 Front Matter 中新增以下信息：---image: src: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---除了 alt 字段是可选，其它为必填。图片说明在图片的下一行添加斜体字，图片下方就会出现说明文字。![img-description](/pics/0.jpg){: width=&quot;1024&quot; height=&quot;768&quot; }_This is image caption_举个例子：这是图片的文字说明图片尺寸为了防止图片页面布局偏移，应该按照以下格式，为每张图片设置像素尺寸。![Desktop View](/assets/img/sample/mockup.png){: width=&quot;700&quot; height=&quot;400&quot; }图片位置图片默认居中，当然，你也可以设置为以下任意一种： normal ， left ， right。举个例子： Normal ![Desktop View](/pics/0.jpg){: .normal width=&quot;1024&quot; height=&quot;768&quot; style=&quot;max-width: 50%&quot;} 实际效果👇👇👇👇👇👇👇👇： repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. Float to the left ![Desktop View](/pics/0.jpg){: .left width=&quot;1024&quot; height=&quot;768&quot; style=&quot;max-width: 50%&quot;} 实际效果👇👇👇👇👇👇👇👇： repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. Float to the right ![Desktop View](//pics/0.jpg){: .right width=&quot;1024&quot; height=&quot;768&quot; style=&quot;max-width: 50%&quot; } 实际效果👇👇👇👇👇👇👇👇： repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. 局限: 指定图片位置后，不应该再添加文字说明。图片阴影你可以给图片加上那个阴影，但是该功能只在 light 模式下生效。![Desktop View](/pics/0.jpg){: .shadow }CDN URL如果你把图片托管在CDN，可以通过修改 _config.yml 文件的 img_cdn 字段，节省重复填写地址的时间。img_cdn: https://cdn.com只要 img_cdn 字段赋值，cdn前缀地址会自动添加到所有图片的路径前。举个例子：![The flower](/path/to/flower.png)解析结果会自动转换为下面的地址:&amp;lt;img src=&quot;https://cdn.com/path/to/flower.png&quot; alt=&quot;The flower&quot;&amp;gt;文章置顶支持在主页置顶一篇或多篇文章，置顶的文章根据发布日期倒序排序。开启如下：---pin: true---代码块使用markdown``` CODE ``` 符号可以轻易实现下面的代码块:This is a plaintext code snippet.指定编程语言使用 ```{language} ``` 即可达到指定语言的语法高亮:```yamlkey: value``` Limitation: The Jekyll style highlight tag is not compatible with this theme.行号默认情况下，除了纯文本、控制台和终端，其他所有语言都会显示行号。如果你不想显示行号，可以在代码块的下一行添加 {: .nolineno} 进行取消。```shellecho &#39;No more line numbers!&#39;```{: .nolineno}指定文件名既然代码块的左上角会显示编程语言，那能不能显示文件名呢，当然可以，只需要添加 file 属性即可：```bash# content```{: file=&quot;path/to/file&quot; }实际效果如下：codeLiquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains &#39;Pack&#39; %} This product&#39;s title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." } ]
